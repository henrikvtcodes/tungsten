@go.Package { name = "github.com/henrikvtcodes/tungsten/config" }
module henrikvtcodes.tungsten.config.Server

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.10.0#/go.pkl"
// import "package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.net@1.2.1#/net.pkl"

import "Records.pkl"

// ------------ TOP LEVEL CONFIGURATION ------------

typealias PortNumber = UInt16
// language=RegExp
const hidden ifaceRegex = #"[a-z0-9]+"#
typealias InterfaceName = String(matches(Regex(ifaceRegex)))

typealias Bindable = InterfaceName | Records.IPAddress

class Zone {
  name: Listing<String>

  records: Listing<Records.Record>

  forward: ForwardConfig
  forwardOnly: Boolean = false
}

class ForwardConfig {
  ipv4Addresses: Listing<Records.IPv4Address>
  ipv6Addresses: Listing<Records.IPv6Address>
  ipAddresses: Listing<Records.IPAddress>
  doh: Listing<String>
}

name: String

port: PortNumber

zones: Mapping<String, Zone>

// In reality the type of this is Listing<Bindable> but that produces an any type in Go which just doesn't work for me
bindAddr: Listing<String>