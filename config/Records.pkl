@go.Package { name = "github.com/henrikvtcodes/tungsten/config" }
module henrikvtcodes.tungsten.config.Records

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.10.0#/go.pkl"


// language=RegExp
const hidden hex: String = "[0-9a-fA-F]"

// language=RegExp
const hidden decByte: String = #"(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})"#

// language=RegExp
const hidden ipv4String = #"(\#(decByte)\.){3}\#(decByte)"#

// language=RegExp
const hidden ipv6String = #"""
  (?x:
    (\#(hex){1,4}:){7}\#(hex){1,4}           # x:x:x:x:x:x:x:x
  | (\#(hex){1,4}:){1,7}:                    # x:: … x:x:x:x:x:x:x::
  | (\#(hex){1,4}:){6}:\#(hex){1,4}          # x:x:x:x:x:x::x
  | (\#(hex){1,4}:){5}(:\#(hex){1,4}){1,2}   # x:x:x:x:x::x … x:x:x:x:x::x:x
  | (\#(hex){1,4}:){4}(:\#(hex){1,4}){1,3}   # x:x:x:x::x … x:x:x:x::x:x:x
  | (\#(hex){1,4}:){3}(:\#(hex){1,4}){1,4}   # x:x:x::x … x:x:x::x:x:x:x
  | (\#(hex){1,4}:){2}(:\#(hex){1,4}){1,5}   # x:x::x … x:x::x:x:x:x:x
  | \#(hex){1,4}:(:\#(hex){1,4}){1,6}        # x::x … x::x:x:x:x:x:x
  | :((:\#(hex){1,4}){1,7}|:)                # ::x … ::x:x:x:x:x:x:x, ::
  | (?: # IPv6 with trailing IPv4
      (\#(hex){1,4}:){6}                      # x:x:x:x:x:x:
    | (\#(hex){1,4}:){5}:                     # x:x:x:x:x::
    | (\#(hex){1,4}:){4}(:\#(hex){1,4})?:     # x:x:x:x:: … x:x:x:x::x:
    | (\#(hex){1,4}:){3}(:\#(hex){1,4}){0,2}: # x:x:x:: … x:x:x::x:x:
    | (\#(hex){1,4}:){2}(:\#(hex){1,4}){0,3}: # x:x:: … x:x::x:x:x:
    | \#(hex){1,4}:(:\#(hex){1,4}){0,4}:      # x:: … x::x:x:x:x:
    | :(:\#(hex){1,4}){0,5}:                  # :: … ::x:x:x:x:x:
    )\#(ipv4String)                           # …d.d.d.d
  | \#(nonGlobalIPv6String)%[0-9]+ # Scoped address
  )
  """#

// language=RegExp
const hidden nonGlobalIPv6String = #"""
  (?xi-U:
    ff[0-9a-f][0-9a-d](?:                        # multicast (FF00::/8 with "scop" less than E (global scope))
      (:[0-9a-f]{1,4}){7}                        # FFxx:x:x:x:x:x:x:x
    | :(:|(:[0-9a-f]{1,4}){1,6})                 # FFxx:: … FFxx::x:x:x:x:x:x
    | :[0-9a-f]:(:|(:[0-9a-f]{1,4}){1,5})        # FFxx:x:: … FFxx:x::x:x:x:x:x
    | (:[0-9a-f]){2}:(:|(:[0-9a-f]{1,4}){1,4})   # FFxx:x:x:: … FFxx:x:x::x:x:x:x
    | (:[0-9a-f]){3}:(:|(:[0-9a-f]{1,4}){1,3})   # FFxx:x:x:x:: … FFxx:x:x:x::x:x:x
    | (:[0-9a-f]){4}:(:|(:[0-9a-f]{1,4}){1,2})   # FFxx:x:x:x:x:: … FFxx:x:x:x:x::x:x
    | (:[0-9a-f]){5}:(:|(:[0-9a-f]{1,4}))        # FFxx:x:x:x:x:x:: … FFxx:x:x:x:x:x::x
    | (:[0-9a-f]){6}::                           # FFxx:x:x:x:x:x:x::
    )
  | fe80(?:                                      # link-local unicast (FE80::/10)
      (:0{1,4}){3}(?:                            # FE80:0:0:0…
        :: | :(:[0-9a-f]{1,4}){1,3}              # FE80:0:0:0:: … FE80:0:0:0::x:x:x
      | :[0-9a-f]{1,4}:(:|(:[0-9a-f]{1,4}){1,2}) # FE80:0:0:0:x:: … FE80:0:0:0:x::x:x
      | (:[0-9a-f]{1,4}){2}::([0-9a-f]{1,4})?    # FE80:0:0:0:x:x:: … FE80:0:0:0:x:x::x
      | (:[0-9a-f]{1,4}){3}:(:|[0-9a-f]{1,4})    # FE80:0:0:0:x:x:x::, FE80:0:0:0:x:x:x:x
      )
    | (:0{1,4}){0,2}:(:|(:[0-9a-f]{1,4}){1,4})   # FE80:: … FE80:0:0::x:x:x:x
    )
  )
  """#

// language=RegExp
const hidden fqdnString = #"(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\.)+[a-zA-Z]{2,63}$)"#


typealias IPv4Address = String(matches(Regex(ipv4String)))
typealias IPv6Address = String(matches(Regex(ipv6String)))
typealias IPAddress = IPv4Address | IPv6Address

abstract class Record {
  name: String
  ttl: UInt32
  type: String
}

class ARecord extends Record {
  address: String(matches(Regex(ipv4String)))
}

class AAAARecord extends Record {
  address: String(matches(Regex(ipv6String)))
}

typealias FQDN = String(matches(Regex(fqdnString)))

class CNAMERecord extends Record {
  target: FQDN
}

class MXRecord extends Record {
  preference: UInt16
  exchange: FQDN | IPAddress
}